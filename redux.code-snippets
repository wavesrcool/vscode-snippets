{
  "Redux - useFold ": {
    "prefix": "rx-uf",
    "body": [
      "const fold = useFold()",
    ]
  },

  "Redux - useShape ": {
    "prefix": "rx-us",
    "body": [
      "const ${1} = useShape(of${1})",
    ]
  },

    "Redux - Shape ": {
        "prefix": "rx-shape",
        "body": [
          "import { createSlice, PayloadAction } from '@reduxjs/toolkit'",
          "",
          "export type TypesShapes${TM_FILENAME_BASE}Thread = 'root'",
          "",
          "export type TypesShapes${TM_FILENAME_BASE}Value = {",
          "loading: boolean",
          "error: boolean",
          "thread: TypesShapes${TM_FILENAME_BASE}Thread | ''",
          "//",
          "// shape type map ${TM_FILENAME_BASE}",
          "//",
          "}",
          "",
          "export type TypesShapes${TM_FILENAME_BASE} = {",
          " value: TypesShapes${TM_FILENAME_BASE}Value",
          "}",
          "",
          "const initialState: TypesShapes${TM_FILENAME_BASE} = {",
          "value: {",
          "loading: false,",
          "error: false,",
          "thread: '',",
          "//",
          "// shape initial ${TM_FILENAME_BASE}",
          "//",
          "},",
          "}",
          "",
          "export const ${TM_FILENAME_BASE}Slice = createSlice({",
          "name: '${TM_FILENAME_BASE}',",
          "initialState,",
          "reducers: {",
          "init${TM_FILENAME_BASE}: (state) => {",
          "state.value = initialState.value",
          "",
          "},",
          "",
          "write${TM_FILENAME_BASE}LoadingTrue: (state) => {",
          "state.value = {",
          "...state.value,",
          "loading: true,",
          "}",
          "},",
          "",
          "write${TM_FILENAME_BASE}LoadingFalse: (state) => {",
          "state.value = {",
          "...state.value,",
          "loading: false,",
          "}",
          "},",
          "",
          "write${TM_FILENAME_BASE}ErrorTrue: (state, action: PayloadAction<TypesShapes${TM_FILENAME_BASE}Thread>) => {",
          "state.value = {",
          "...state.value,",
          "error: true,",
          "thread: action.payload,",
          "}",
          "},",
          "",
          "write${TM_FILENAME_BASE}ErrorFalse: (state) => {",
          "state.value = {",
          "...state.value,",
          "error: false,",
          "thread: '',",
          "}",
          "},",
          "",
          "//",
          "// shape definitions ${TM_FILENAME_BASE}",
          "//",
          "",
          "},})",
          "",
          "export const {",
          "init${TM_FILENAME_BASE}, write${TM_FILENAME_BASE}LoadingTrue, write${TM_FILENAME_BASE}LoadingFalse, write${TM_FILENAME_BASE}ErrorTrue, write${TM_FILENAME_BASE}ErrorFalse",
          "//", 
          "// shape library ${TM_FILENAME_BASE}",
          "//",
          " } = ${TM_FILENAME_BASE}Slice.actions",
          "",
          
          "export const of${TM_FILENAME_BASE} = (state: _AppShape): TypesShapes${TM_FILENAME_BASE}Value => state.${TM_FILENAME_BASE}.value",
          "export default ${TM_FILENAME_BASE}Slice.reducer",
          ""
        ]
      }


      
}